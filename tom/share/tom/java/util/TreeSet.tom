/*
 *
 * Copyright (c) 2006-2013, Universite de Lorraine, Inria
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met: 
 * 	- Redistributions of source code must retain the above copyright
 * 	notice, this list of conditions and the following disclaimer.  
 * 	- Redistributions in binary form must reproduce the above copyright
 * 	notice, this list of conditions and the following disclaimer in the
 * 	documentation and/or other materials provided with the distribution.
 * 	- Neither the name of the Inria nor the names of its
 * 	contributors may be used to endorse or promote products derived from
 * 	this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 **/

%include { types/TreeSet.tom }
%include { types/Object.tom }

%oplist TreeSet concTreeSet(Object*) {
  is_fsym(s)       { ($s!= null) && ($s instanceof java.util.TreeSet) }
  make_empty()     { new java.util.TreeSet() }
  make_insert(o,s) { treeSetAppend($o,$s) }
  get_head(s)      { treeSetGetHead($s) }
  get_tail(s)      { treeSetGetTail($s) }
  is_empty(s)      { ($s.size()==0) }
}

private static java.util.TreeSet treeSetAppend(Object o, java.util.TreeSet s) {
  java.util.TreeSet res = (java.util.TreeSet) s.clone();
  res.add(o);
  return res;
}

private static Object treeSetGetHead(java.util.TreeSet s) {
  java.util.Iterator it = s.iterator();
  return it.next();
}

private static java.util.TreeSet treeSetGetTail(java.util.TreeSet s) {
  java.util.TreeSet res = (java.util.TreeSet) s.clone();
  java.util.Iterator it = s.iterator();
  res.remove(it.next());
  return res;
}


